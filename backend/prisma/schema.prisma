generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  password      String
  role          userRole @default(User)
  tasks         Task[]   @relation("TaskOwner")
  assignedTasks Task[]   @relation("AssignedUser")
  documentReads DocumentRead[]  
  createdAt     DateTime @default(now())
}

model Task {
  id           Int          @id @default(autoincrement())
  title        String
  description  String
  status       TaskStatus   @default(Open)
  priority     TaskPriority @default(Low)
  assignedTo   Int?
  assignedUser User?        @relation("AssignedUser", fields: [assignedTo], references: [id])
  userid       Int
  user         User?        @relation("TaskOwner", fields: [userid], references: [id])
  dueDate      DateTime
  createdAt    DateTime     @default(now())
  documents    Json?
  documentReads DocumentRead[] 
}

model DocumentRead {
  id        Int      @id @default(autoincrement())
  userId    Int
  taskId    Int
  documentUrl String
  readAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  task Task @relation(fields: [taskId], references: [id])
  
  @@unique([userId, taskId, documentUrl])
}


enum TaskPriority {
  Low
  Medium
  High
}

enum TaskStatus {
  Open
  InProgress
  Completed
}

enum userRole {
  User
  Admin
}
